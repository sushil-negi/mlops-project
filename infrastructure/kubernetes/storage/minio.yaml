apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: mlops-platform
type: Opaque
data:
  MINIO_ROOT_USER: bWluaW9hZG1pbg== # minioadmin base64 encoded
  MINIO_ROOT_PASSWORD: bWluaW9hZG1pbjEyMw== # minioadmin123 base64 encoded
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: mlops-platform
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: mlops-platform
  labels:
    app: minio
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: mlops-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
        app.kubernetes.io/name: minio
        app.kubernetes.io/component: storage
        app.kubernetes.io/part-of: mlops-platform
    spec:
      containers:
      - name: minio
        image: minio/minio:latest
        command:
        - /bin/bash
        - -c
        args:
        - minio server /data --console-address :9001
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        envFrom:
        - secretRef:
            name: minio-secret
        volumeMounts:
        - name: minio-storage
          mountPath: /data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: mlops-platform
  labels:
    app: minio
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: mlops-platform
spec:
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
    name: api
  - port: 9001
    targetPort: 9001
    protocol: TCP
    name: console
  selector:
    app: minio
  type: ClusterIP
---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-bucket-setup
  namespace: mlops-platform
  labels:
    app: minio-setup
    app.kubernetes.io/name: minio-setup
    app.kubernetes.io/component: setup
    app.kubernetes.io/part-of: mlops-platform
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: mc
        image: minio/mc:latest
        command:
        - /bin/sh
        - -c
        args:
        - |
          # Wait for MinIO to be ready
          until mc alias set myminio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD; do
            echo "Waiting for MinIO..."
            sleep 5
          done
          
          # Create buckets
          mc mb myminio/models --ignore-existing
          mc mb myminio/artifacts --ignore-existing
          mc mb myminio/datasets --ignore-existing
          mc mb myminio/experiments --ignore-existing
          
          # Set bucket policies
          mc anonymous set download myminio/models
          mc anonymous set download myminio/artifacts
          
          echo "MinIO setup completed"
        envFrom:
        - secretRef:
            name: minio-secret