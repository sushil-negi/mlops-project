apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: mlops-platform
data:
  POSTGRES_DB: mlops
  POSTGRES_USER: mlops
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: mlops-platform
type: Opaque
data:
  POSTGRES_PASSWORD: bWxvcHMxMjM= # mlops123 base64 encoded
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: mlops-platform
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: mlops-platform
  labels:
    app: postgres
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: mlops-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        app.kubernetes.io/name: postgres
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: mlops-platform
    spec:
      containers:
      - name: postgres
        image: postgres:14
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: postgres-config
        - secretRef:
            name: postgres-secret
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - mlops
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - mlops
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-scripts
        configMap:
          name: postgres-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: mlops-platform
  labels:
    app: postgres
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: mlops-platform
spec:
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: postgres
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: mlops-platform
data:
  init.sql: |
    -- Create databases for different services
    CREATE DATABASE model_registry;
    CREATE DATABASE pipeline_orchestrator;
    CREATE DATABASE monitoring_engine;
    CREATE DATABASE security_compliance;
    
    -- Create users for services
    CREATE USER model_registry_user WITH PASSWORD 'model_registry_pass';
    CREATE USER pipeline_user WITH PASSWORD 'pipeline_pass';
    CREATE USER monitoring_user WITH PASSWORD 'monitoring_pass';
    CREATE USER security_user WITH PASSWORD 'security_pass';
    
    -- Grant privileges
    GRANT ALL PRIVILEGES ON DATABASE model_registry TO model_registry_user;
    GRANT ALL PRIVILEGES ON DATABASE pipeline_orchestrator TO pipeline_user;
    GRANT ALL PRIVILEGES ON DATABASE monitoring_engine TO monitoring_user;
    GRANT ALL PRIVILEGES ON DATABASE security_compliance TO security_user;