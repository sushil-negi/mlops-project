apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthcare-ai
  namespace: healthcare-ai-prod
  labels:
    app: healthcare-ai
    version: v2
    environment: production
spec:
  replicas: 3  # More replicas for production
  selector:
    matchLabels:
      app: healthcare-ai
      version: v2
  template:
    metadata:
      labels:
        app: healthcare-ai
        version: v2
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: healthcare-ai
        image: healthcare-ai:v2.0.2
        imagePullPolicy: Never  # For local development with kind
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: MONITORING_ENABLED
          value: "true"
        - name: LOG_LEVEL
          value: "warning"  # Less verbose logging in production
        - name: WORKERS
          value: "2"  # More workers for production
        - name: REDIS_HOST
          value: "redis.mlops-healthcare.svc.cluster.local"
        resources:
          requests:
            memory: "1Gi"      # More resources for production
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      # Production-specific settings
      terminationGracePeriodSeconds: 60
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000