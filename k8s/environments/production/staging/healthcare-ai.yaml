apiVersion: v1
kind: ConfigMap
metadata:
  name: healthcare-ai-config
  namespace: healthcare-ai-production
data:
  MODEL_NAME: "healthcare-ai-production"
  MODEL_VERSION: "latest"
  ENVIRONMENT: "production"
  MLFLOW_TRACKING_URI: "http://mlflow:5000"
  REDIS_URL: "redis://redis:6379"
  LOG_LEVEL: "WARNING"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthcare-ai
  namespace: healthcare-ai-production
  labels:
    app: healthcare-ai
    environment: production
spec:
  replicas: 5
  selector:
    matchLabels:
      app: healthcare-ai
  template:
    metadata:
      labels:
        app: healthcare-ai
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - healthcare-ai
            topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-type
                operator: In
                values:
                - production
      initContainers:
      - name: wait-for-mlflow
        image: curlimages/curl:latest
        command:
        - sh
        - -c
        - |
          until curl -f http://mlflow:5000/; do
            echo "Waiting for MLflow..."
            sleep 5
          done
      - name: wait-for-redis
        image: redis:7-alpine
        command:
        - sh
        - -c
        - |
          until redis-cli -h redis ping; do
            echo "Waiting for Redis..."
            sleep 2
          done
      containers:
      - name: healthcare-ai
        image: healthcare-ai:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: healthcare-ai-config
        volumeMounts:
        - name: model-artifacts
          mountPath: /app/artifacts
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
      volumes:
      - name: model-artifacts
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: healthcare-ai
  namespace: healthcare-ai-production
  labels:
    app: healthcare-ai
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: healthcare-ai

---
apiVersion: v1
kind: Service
metadata:
  name: healthcare-ai-external
  namespace: healthcare-ai-production
  labels:
    app: healthcare-ai
spec:
  type: NodePort
  ports:
  - port: 8000
    targetPort: 8000
    nodePort: 31000
  selector:
    app: healthcare-ai